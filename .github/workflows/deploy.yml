name: Build and Deploy API to Elastic Beanstalk

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
        deploy: 
          description: "Deploy to Elastic Beanstalk?"
          required: true
          default: 'true'
          type: choice
          options:
            - 'true'
            - 'false'

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: backend-api
      APP_NAME: backend-api
      ENV_NAME: backend-api-env
      BUCKET: beanstalk-bucket-shamaliat
      IMAGE_TAG: latest
      ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set version label
      run: echo "VERSION=v-$(date +%s)" >> $GITHUB_ENV

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | \
        docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build Docker image
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG -f backend/Dockerfile ./backend

    - name: Tag and push Docker image to ECR
      run: |
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Create Dockerrun.aws.json
      run: |
        echo '{
          "AWSEBDockerrunVersion": "1",
          "Image": {
            "Name": "'$ACCOUNT_ID'.dkr.ecr.'$AWS_REGION'.amazonaws.com/'$ECR_REPOSITORY':'$IMAGE_TAG'",
            "Update": "true"
          },
          "Ports": [
            {
              "ContainerPort": "5000"
            }
          ]
        }' > Dockerrun.aws.json

    - name: Zip the Dockerrun file
      run: zip app.zip Dockerrun.aws.json

    - name: Upload to S3
      run: aws s3 cp app.zip s3://$BUCKET/app.zip

    - name: Create Elastic Beanstalk application version
      run: |
        aws elasticbeanstalk create-application-version \
          --application-name $APP_NAME \
          --version-label $VERSION \
          --source-bundle S3Bucket=$BUCKET,S3Key=app.zip

    - name: Deploy to Elastic Beanstalk (on main only)
      if: github.ref == 'refs/heads/main' || inputs.deploy == 'true'
      run: |
        aws elasticbeanstalk update-environment \
          --environment-name $ENV_NAME \
          --version-label $VERSION